set(SOURCES_PM_SHARED
	../pm_shared/pm_debug.h
	../pm_shared/pm_debug.c
	../pm_shared/pm_defs.h
	../pm_shared/pm_info.h
	../pm_shared/pm_materials.h
	../pm_shared/pm_math.c
	../pm_shared/pm_movevars.h
	../pm_shared/pm_shared.h
	../pm_shared/pm_shared.c
)

set(SOURCES_GAME_SHARED
	../game_shared/customGeometry/constructors/aabboxConstructor.h
	../game_shared/customGeometry/constructors/aabboxConstructor.cpp
	../game_shared/customGeometry/geometryItem.h
	../game_shared/customGeometry/geometryItem.cpp
	../game_shared/customGeometry/sharedDefs.h
	../game_shared/customGeometry/sharedDefs.cpp
	../game_shared/eventConstructor/eventConstructor.h
	../game_shared/eventConstructor/eventConstructor.cpp
	../game_shared/gameplay/inaccuracymodifiers.h
	../game_shared/gameplay/inaccuracymodifiers.cpp
	../game_shared/gameplay/radialdamage.h
	../game_shared/gameplay/radialdamage.cpp
	../game_shared/gameplay/weaponInaccuracyCalculator.h
	../game_shared/gameplay/weaponInaccuracyCalculator.cpp
	../game_shared/resources/BaseResourceCollection.h
	../game_shared/resources/FootstepSoundResources.h
	../game_shared/resources/FootstepSoundResources.cpp
	../game_shared/resources/ItemSoundResources.h
	../game_shared/resources/ItemSoundResources.cpp
	../game_shared/resources/IterableResourceCollection.h
	../game_shared/resources/MaterialBreakSoundResources.h
	../game_shared/resources/MaterialBreakSoundResources.cpp
	../game_shared/resources/PlayerMoveResources.h
	../game_shared/resources/PlayerMoveResources.cpp
	../game_shared/resources/PlayerSoundResources.h
	../game_shared/resources/PlayerSoundResources.cpp
	../game_shared/resources/ShellImpactSoundResources.h
	../game_shared/resources/ShellImpactSoundResources.cpp
	../game_shared/resources/SoundResources.h
	../game_shared/resources/SoundResources.cpp
	../game_shared/resources/SurfaceAttributes.h
	../game_shared/resources/SurfaceAttributes.cpp
	../game_shared/resources/SurfaceDecalResources.h
	../game_shared/resources/SurfaceDecalResources.cpp
	../game_shared/resources/SurfaceSoundResources.h
	../game_shared/resources/SurfaceSoundResources.cpp
	../game_shared/resources/TextureResources.h
	../game_shared/resources/TextureResources.cpp
	../game_shared/resources/WeaponSoundResources.h
	../game_shared/resources/WeaponSoundResources.cpp
	../game_shared/screenOverlays/screenOverlayIds.h
	../game_shared/sound/SoundInstance.h
	../game_shared/sound/SoundInstance.cpp
	../game_shared/util/cvarFuncs.h
	../game_shared/util/debugLogger.h
	../game_shared/util/debugLogger.cpp
	../game_shared/util/extramath.h
	../game_shared/util/weightedvaluelist.h
	../game_shared/weaponattributes/weaponatts_ammobasedattack.h
	../game_shared/weaponattributes/weaponatts_ammodef.h
	../game_shared/weaponattributes/weaponatts_baseattack.h
	../game_shared/weaponattributes/weaponatts_base.h
	../game_shared/weaponattributes/weaponatts_collection.h
	../game_shared/weaponattributes/weaponatts_collection.cpp
	../game_shared/weaponattributes/weaponatts_core.h
	../game_shared/weaponattributes/weaponatts_hitscanattack.h
	../game_shared/weaponattributes/weaponatts_meleeattack.h
	../game_shared/weaponattributes/weaponatts_playermodel.h
	../game_shared/weaponattributes/weaponatts_prediction.h
	../game_shared/weaponattributes/weaponatts_projectileattack.h
	../game_shared/weaponattributes/weaponatts_skillrecord.h
	../game_shared/weaponattributes/weaponatts_skillrecord.cpp
	../game_shared/weaponattributes/weaponatts_soundset.h
	../game_shared/weaponattributes/weaponatts_viewmodel.h
	../game_shared/weapons/ammodefs.h
	../game_shared/weapons/ammodefs.cpp
	../game_shared/weapons/crossbow.cpp
	../game_shared/weapons/crowbar.cpp
	../game_shared/weapons/egon.cpp
	../game_shared/weapons/gauss.cpp
	../game_shared/weapons/generichitscanweapon.h
	../game_shared/weapons/generichitscanweapon.cpp
	../game_shared/weapons/genericmeleeweapon.h
	../game_shared/weapons/genericmeleeweapon.cpp
	../game_shared/weapons/genericprojectileweapon.h
	../game_shared/weapons/genericprojectileweapon.cpp
	../game_shared/weapons/genericweapon.h
	../game_shared/weapons/genericweapon.cpp
	../game_shared/weapons/glock.cpp
	../game_shared/weapons/handgrenade.cpp
	../game_shared/weapons/hornetgun.cpp
	../game_shared/weapons/mp5.cpp
	../game_shared/weapons/python.cpp
	../game_shared/weapons/rpg.cpp
	../game_shared/weapons/satchel.cpp
	../game_shared/weapons/shotgun.cpp
	../game_shared/weapons/squeakgrenade.cpp
	../game_shared/weapons/tripmine.cpp
	../game_shared/weapons/weapon_fists_atts.h
	../game_shared/weapons/weapon_fists.h
	../game_shared/weapons/weapon_fists.cpp
	../game_shared/weapons/weapon_frinesi_atts.h
	../game_shared/weapons/weapon_frinesi.h
	../game_shared/weapons/weapon_frinesi.cpp
	../game_shared/weapons/weapon_grenadelauncher_atts.h
	../game_shared/weapons/weapon_grenadelauncher.h
	../game_shared/weapons/weapon_grenadelauncher.cpp
	../game_shared/weapons/weaponids.h
	../game_shared/weapons/weapon_l96a1.cpp
	../game_shared/weapons/weapon_l96a1_atts.h
	../game_shared/weapons/weapon_l96a1.h
	../game_shared/weapons/weapon_p99.cpp
	../game_shared/weapons/weapon_p99_atts.h
	../game_shared/weapons/weapon_p99.h
	../game_shared/weapons/weapon_pref_weights.h
	../game_shared/weapons/weapon_raptor_atts.h
	../game_shared/weapons/weapon_raptor.h
	../game_shared/weapons/weapon_raptor.cpp
	../game_shared/weapons/weaponregistry.h
	../game_shared/weapons/weaponregistry.cpp
	../game_shared/weapons/weapons.h
	../game_shared/weapons/weapon_silent_atts.h
	../game_shared/weapons/weapon_silent.h
	../game_shared/weapons/weapon_silent.cpp
	../game_shared/weapons/weaponslots.h
	../game_shared/weapons/weaponslots.cpp
	../game_shared/studio_utils_shared.h
	../game_shared/studio_utils_shared.cpp

	# NFTODO: Other game_shared files in the root of the directory
	# (apart from voice_gamemgr.cpp) don't appear to be used.
	# Remove them and see if anything breaks.
)

# NFTODO: Make a proper library out of this
set(SOURCES_GAME_MENU_SHARED
	../game_menu_shared/botprofiles/botprofileparser.h
	../game_menu_shared/botprofiles/botprofileparser.cpp
	../game_menu_shared/botprofiles/botprofiletable.h
	../game_menu_shared/botprofiles/botprofiletable.cpp
	../game_menu_shared/coreutil/coreutil.h
	../game_menu_shared/filesystemops/FileSystemOps.h
	../game_menu_shared/filesystemops/FileSystemOps.cpp
	../game_menu_shared/gameresources/GameResources.h
	../game_menu_shared/gameresources/GameResources.cpp
	../game_menu_shared/iterators/utlhashmapconstiterator.h
	../game_menu_shared/projectInterface/fixedSizeMessageBuffer.h
	../game_menu_shared/projectInterface/IFileLoader.h
	../game_menu_shared/projectInterface/ILogInterface.h
	../game_menu_shared/projectInterface/IProjectInterface.h
	../game_menu_shared/projectInterface/IProjectInterface.cpp
	../game_menu_shared/projectInterface/IRNG.h

	# NFTODO: Make a proper library out of these
	../game_menu_shared/rapidjson/error/en.h
	../game_menu_shared/rapidjson/error/error.h
	../game_menu_shared/rapidjson/internal/biginteger.h
	../game_menu_shared/rapidjson/internal/diyfp.h
	../game_menu_shared/rapidjson/internal/dtoa.h
	../game_menu_shared/rapidjson/internal/ieee754.h
	../game_menu_shared/rapidjson/internal/itoa.h
	../game_menu_shared/rapidjson/internal/meta.h
	../game_menu_shared/rapidjson/internal/pow10.h
	../game_menu_shared/rapidjson/internal/regex.h
	../game_menu_shared/rapidjson/internal/stack.h
	../game_menu_shared/rapidjson/internal/strfunc.h
	../game_menu_shared/rapidjson/internal/strtod.h
	../game_menu_shared/rapidjson/internal/swap.h
	../game_menu_shared/rapidjson/msinttypes/inttypes.h
	../game_menu_shared/rapidjson/msinttypes/stdint.h
	../game_menu_shared/rapidjson/allocators.h
	../game_menu_shared/rapidjson/document.h
	../game_menu_shared/rapidjson/encodedstream.h
	../game_menu_shared/rapidjson/encodings.h
	../game_menu_shared/rapidjson/filereadstream.h
	../game_menu_shared/rapidjson/filewritestream.h
	../game_menu_shared/rapidjson/fwd.h
	../game_menu_shared/rapidjson/istreamwrapper.h
	../game_menu_shared/rapidjson/memorybuffer.h
	../game_menu_shared/rapidjson/memorystream.h
	../game_menu_shared/rapidjson/ostreamwrapper.h
	../game_menu_shared/rapidjson/pointer.h
	../game_menu_shared/rapidjson/prettywriter.h
	../game_menu_shared/rapidjson/rapidjson.h
	../game_menu_shared/rapidjson/reader.h
	../game_menu_shared/rapidjson/schema.h
	../game_menu_shared/rapidjson/stream.h
	../game_menu_shared/rapidjson/stringbuffer.h
	../game_menu_shared/rapidjson/writer.h
	../game_menu_shared/rapidjson_helpers/rapidjson_helpers.h
	../game_menu_shared/rapidjson_helpers/rapidjson_helpers.cpp
)

set(SOURCES_SERVER
	bots/input/botuserinputsimulator.h
	bots/input/botuserinputsimulator.cpp
	bots/itemattributes/botweaponattributes.h
	bots/bot_ai.cpp
	bots/bot_commands.h
	bots/bot_commands.cpp
	bots/bot_cvars.h
	bots/bot_cvars.cpp
	bots/bot_fightstyle.cpp
	bots/bot_memory.cpp
	bots/bot_misc.h
	bots/bot_misc.cpp
	bots/bot_move.cpp
	bots/bot_nav.cpp
	bots/bot_stats.cpp
	bots/bot.h
	bots/botfactory.h
	bots/botfactory.cpp
	bots/botgamerulesinterface.h
	bots/botgamerulesinterface.cpp
	bots/botregister.h
	bots/botregister.cpp
	customGeometry/commands.h
	customGeometry/commands.cpp
	customGeometry/messageWriter.h
	customGeometry/messageWriter.cpp
	gameplay/gameplayCvars.h
	gameplay/gameplayCvars.cpp
	gameplay/gameplaySystems.h
	gameplay/gameplaySystems.cpp
	gameplay/gameplaySystemsBase.h
	gameplay/gameplaySystemsBase.cpp
	gameplay/gameplaySystemsMultiplayer.h
	gameplay/gameplaySystemsMultiplayer.cpp
	gameplay/gameplaySystemsSingleplayer.h
	gameplay/gameplaySystemsSingleplayer.cpp
	gameplay/gamerules.cpp
	gameplay/spawnpointlist.h
	gameplay/spawnpointlist.cpp
	gameplay/spawnpointmanager.h
	gameplay/spawnpointmanager.cpp
	hitbox_debugging/geometryConstructors/hitboxGeometryConstructor.h
	hitbox_debugging/geometryConstructors/hitboxGeometryConstructor.cpp
	hitbox_debugging/hitbox_commands.h
	hitbox_debugging/hitbox_commands.cpp
	hitbox_debugging/hitbox_debugData.h
	hitbox_debugging/hitbox_debugData.cpp
	hitbox_debugging/hitbox_messageConstructor.h
	hitbox_debugging/hitbox_messageConstructor.cpp
	messages/baseMessageWriter.h
	messages/baseMessageWriter.cpp
	messages/messageRegistrationHelper.h
	projectInterface_server/fileLoaders_server.h
	projectInterface_server/fileLoaders_server.cpp
	projectInterface_server/logInterface_server.h
	projectInterface_server/logInterface_server.cpp
	projectInterface_server/projectInterface_server.h
	projectInterface_server/projectInterface_server.cpp
	projectInterface_server/rng_server.h
	projectInterface_server/rng_server.cpp
	screenOverlays/messageWriter.h
	screenOverlays/messageWriter.cpp
	sound/ServerSoundInstance.h
	sound/ServerSoundInstance.cpp
	utils/mp_utils.h
	utils/mp_utils.cpp
	utils/utils.cpp
	weapondebugevents/weapondebugevent_base.h
	weapondebugevents/weapondebugevent_base.cpp
	weapondebugevents/weapondebugevent_hitscanfire.h
	weapondebugevents/weapondebugevent_hitscanfire.cpp
	weapondebugevents/weapondebugeventsource.h
	weapondebugevents/weapondebugeventsource.cpp
	activitymap.h
	aflock.cpp
	agrunt.cpp
	airtank.cpp
	animating.cpp
	animation.h
	animation.cpp
	apache.cpp
	barnacle.cpp
	barney.cpp
	bigmomma.cpp
	bloater.cpp
	bmodels.cpp
	bullsquid.cpp
	buttons.cpp
	cbase.cpp
	client.h
	client.cpp
	combat.cpp
	controller.cpp
	decals.h
	defaultai.h
	defaultai.cpp
	doors.h
	doors.cpp
	effects.cpp
	explode.h
	explode.cpp
	flyingmonster.h
	flyingmonster.cpp
	func_break.h
	func_break.cpp
	func_tank.cpp
	game.cpp
	gargantua.cpp
	genericmonster.cpp
	ggrenade.cpp
	globals.cpp
	gman.cpp
	h_ai.cpp
	h_battery.cpp
	h_cine.cpp
	h_cycler.cpp
	h_export.cpp
	hassassin.cpp
	headcrab.cpp
	healthkit.cpp
	hgrunt.cpp
	hornet.cpp
	houndeye.cpp
	ichthyosaur.cpp
	islave.cpp
	items.h
	items.cpp
	leech.cpp
	lights.cpp
	maprules.h
	maprules.cpp
	monstermaker.cpp
	monsters.cpp
	monsterstate.cpp
	mortar.cpp
	multiplay_gamerules.cpp
	nihilanth.cpp
	nodes_compat.h
	nodes.cpp
	observer.cpp
	osprey.cpp
	pathcorner.cpp
	plane.h
	plane.cpp
	plats.cpp
	player.cpp
	playermonster.cpp
	prop_playercorpse.h
	prop_playercorpse.cpp
	rat.cpp
	roach.cpp
	schedule.cpp
	scientist.cpp
	scripted.h
	scripted.cpp
	singleplay_gamerules.cpp
	skill.cpp
	sound.cpp
	soundent.cpp
	spectator.h
	spectator.cpp
	squad.h
	squadmonster.h
	squadmonster.cpp
	subs.cpp
	talkmonster.h
	talkmonster.cpp
	teamplay_gamerules.h
	teamplay_gamerules.cpp
	tempmonster.cpp
	tentacle.cpp
	trains.h
	triggers.cpp
	turret.cpp
	weapons.cpp
	world.cpp
	xen.cpp
	zombie.cpp
)

if(TARGET_IS_64BIT)
	set(DEF_FILE server_amd64.def)
else()
	set(DEF_FILE server.def)
endif()

set(CMAKE_SHARED_LIBRARY_PREFIX "")

if(TARGET_IS_64BIT)
	set(CMAKE_SHARED_LIBRARY_SUFFIX "_amd64${CMAKE_SHARED_LIBRARY_SUFFIX}")
endif()

add_library(${TARGETNAME_LIB_SERVER} SHARED
	${SOURCES_PM_SHARED}
	${SOURCES_GAME_SHARED}
	${SOURCES_SERVER}
	${SOURCES_GAME_MENU_SHARED}
	${DEF_FILE}
)

target_link_libraries(${TARGETNAME_LIB_SERVER} PRIVATE
	${TARGETNAME_LIB_MINIUTL}
)

# Since this library is looked up entirely at runtime,
# it is not depended upon by anything else in this repo,
# so all include paths are private.
target_include_directories(${TARGETNAME_LIB_SERVER} PRIVATE
	.
	../common
	../engine
	../pm_shared
	../game_shared
	../shared_utils/cpp
	../public
	../game_shared/weapons
	../game_shared/weaponattributes
	../game_shared/util
	../game_shared/gameplay
	../game_menu_shared
	../miniutl
	bots
	bots/profiles
	bots/itemattributes
	bots/input
	projectInterface_server
	gameplay
	utils
)

target_compile_definitions(${TARGETNAME_LIB_SERVER} PRIVATE
	GAME_LIBRARIES=1
	NO_VOICEGAMEMGR=1 # NFTODO: This would require game_shared/voice_gamemgr.cpp
	CLIENT_WEAPONS=1 # NFTODO: Make this a build switch

	# Windows
	$<$<STREQUAL:"${TARGET_PLATFORM}","WINDOWS">:_WIN32=1>
	$<$<STREQUAL:"${TARGET_PLATFORM}","WINDOWS">:WIN32=1>
	$<$<STREQUAL:"${TARGET_PLATFORM}","WINDOWS">:NOMINMAX=1>
	$<$<STREQUAL:"${TARGET_PLATFORM}","WINDOWS">:_HAS_EXCEPTIONS=0>

	# Linux
	$<$<STREQUAL:"${TARGET_PLATFORM}","LINUX">:_LINUX=1>
	$<$<STREQUAL:"${TARGET_PLATFORM}","LINUX">:stricmp=strcasecmp>
	$<$<STREQUAL:"${TARGET_PLATFORM}","LINUX">:strnicmp=strncasecmp>
	$<$<STREQUAL:"${TARGET_PLATFORM}","LINUX">:_snprintf=snprintf>
	$<$<STREQUAL:"${TARGET_PLATFORM}","LINUX">:_vsnprintf=vsnprintf>
)

target_compile_options(${TARGETNAME_LIB_SERVER} PRIVATE
	$<$<NOT:$<STREQUAL:"${HOST_COMPILER}","MSVC">>:-fno-exceptions>

	# This is used for networking entity properties
	$<$<NOT:$<STREQUAL:"${HOST_COMPILER}","MSVC">>:-Wno-invalid-offsetof>
)

install(TARGETS ${TARGETNAME_LIB_SERVER}
	RUNTIME DESTINATION "${INSTALL_ROOT}/${GAME_FOLDER_NAME}/dlls"
	LIBRARY DESTINATION "${INSTALL_ROOT}/${GAME_FOLDER_NAME}/dlls"
)
