name: "Release"

on:
  push:
    tags:
      - "v*"

# For some reason, the builds like to be nested in extra nightfire-open
# directories, and I can't find a way to stop that from happening. Whatever.

jobs:
  check-release-notes:
    name: Check release notes are present
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    # If this fails, it should fail the step.
    - shell: bash
      run: stat ${{runner.workspace}}/nightfire-open/releases/${{github.ref_name}}/CHANGELOG.md

  build-linux:
    name: Build on Ubuntu Latest
    runs-on: ubuntu-22.04
    needs: check-release-notes

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      run: sudo apt update && sudo apt install -y libsdl2-dev

    - name: Build
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{runner.workspace}}/build
        cc: gcc
        cxx: g++
        build-type: MinSizeRel
        target: install
        configure-options: -DCMAKE_INSTALL_PREFIX=install

    - shell: bash
      run: |
        cd ${{runner.workspace}}
        tar -czvf nightfire-open_${{github.ref_name}}_linux.tar.gz -C ${{runner.workspace}}/nightfire-open/install/ .

    - name: Upload build
      uses: actions/upload-artifact@v3
      with:
        name: artefacts_linux
        path: ${{runner.workspace}}/nightfire-open_${{github.ref_name}}_linux.tar.gz

  build-windows:
    name: Build on Windows
    runs-on: windows-2022
    needs: check-release-notes

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Build
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{runner.workspace}}/build
        cc: cl
        cxx: cl
        build-type: MinSizeRel
        target: install
        configure-options: -DCMAKE_INSTALL_PREFIX=install

    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        filename: 'nightfire-open_${{github.ref_name}}_windows.zip'
        directory: ${{runner.workspace}}
        path: nightfire-open/install

    - name: Upload build
      uses: actions/upload-artifact@v3
      with:
        name: artefacts_windows
        path: ${{runner.workspace}}/nightfire-open_${{github.ref_name}}_windows.zip

  create-release:
    runs-on: ubuntu-22.04
    needs: [build-windows, build-linux]
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Download Linux artefacts
        uses: actions/download-artifact@v3
        with:
          name: artefacts_linux

      - name: Download Windows artefacts
        uses: actions/download-artifact@v3
        with:
          name: artefacts_windows

      - name: Create release
        uses: 'softprops/action-gh-release@v1'
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          name: Release ${{github.ref_name}}
          body_path: ${{runner.workspace}}/nightfire-open/releases/${{github.ref_name}}/CHANGELOG.md
          files:  |
            ${{runner.workspace}}/nightfire-open/nightfire-open_${{github.ref_name}}_linux.tar.gz
            ${{runner.workspace}}/nightfire-open/nightfire-open_${{github.ref_name}}_windows.zip
